apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: emr-ingress-production
  namespace: emr-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://emr-blockchain.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/client-body-buffer-size: "1m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/limit-connections: "10"
    # 安全头配置
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; media-src 'self'; object-src 'none'; frame-src 'none';" always;
spec:
  tls:
  - hosts:
    - emr-blockchain.com
    - www.emr-blockchain.com
    - api.emr-blockchain.com
    secretName: emr-production-tls
  rules:
  # 主域名 (前端)
  - host: emr-blockchain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: emr-frontend-service-production
            port:
              number: 80
  # www域名重定向到主域名
  - host: www.emr-blockchain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: emr-frontend-service-production
            port:
              number: 80
  # API域名
  - host: api.emr-blockchain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: emr-backend-service-production
            port:
              number: 80

---
# 监控Ingress (Prometheus/Grafana)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: emr-monitoring-ingress-production
  namespace: emr-production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - EMR Monitoring'
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - monitoring.emr-blockchain.com
    secretName: emr-monitoring-tls
  rules:
  - host: monitoring.emr-blockchain.com
    http:
      paths:
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090