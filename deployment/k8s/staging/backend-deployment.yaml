apiVersion: apps/v1
kind: Deployment
metadata:
  name: emr-backend-staging
  namespace: emr-staging
  labels:
    app: emr-backend-staging
    environment: staging
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: emr-backend-staging
  template:
    metadata:
      labels:
        app: emr-backend-staging
        environment: staging
    spec:
      containers:
      - name: backend
        image: IMAGE_TAG_BACKEND
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: NODE_ENV
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: DB_NAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: emr-secrets-staging
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: emr-secrets-staging
              key: REDIS_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: emr-secrets-staging
              key: JWT_SECRET
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: emr-secrets-staging
              key: ENCRYPTION_KEY
        - name: IPFS_HOST
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: IPFS_HOST
        - name: IPFS_PORT
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: IPFS_PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: emr-config-staging
              key: LOG_LEVEL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: logs
        emptyDir: {}
      - name: uploads
        persistentVolumeClaim:
          claimName: emr-uploads-staging
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: emr-backend-service-staging
  namespace: emr-staging
  labels:
    app: emr-backend-staging
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: emr-backend-staging

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: emr-uploads-staging
  namespace: emr-staging
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-client