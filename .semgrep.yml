# Semgrep Configuration for Blockchain EMR Security Scanning

# Include OWASP Top 10 and security-focused rulesets
rules:
  # OWASP Top 10 2021 Rules
  - p/owasp-top-ten
  - p/security-audit
  - p/secrets
  - p/sql-injection
  - p/xss
  - p/command-injection
  - p/path-traversal
  - p/insecure-transport
  - p/weak-crypto
  - p/jwt-security

  # Language-specific security rules
  - p/typescript
  - p/javascript
  - p/nodejs
  - p/react
  - p/express

  # Custom rules for blockchain and healthcare
  - p/dockerfile
  - p/kubernetes
  - p/docker-compose

# Paths to scan
paths:
  include:
    - backend-app/src/
    - react-app/src/
    - chaincode/src/
    - scripts/
    - k8s/
    - docker/
    - "*.js"
    - "*.ts"
    - "*.tsx"
    - "*.jsx"
    - "*.json"
    - "*.yml"
    - "*.yaml"
    - "Dockerfile*"
    - "docker-compose*.yml"

  exclude:
    - node_modules/
    - dist/
    - build/
    - coverage/
    - "*.test.ts"
    - "*.spec.ts"
    - "*.test.js"
    - "*.spec.js"
    - "*.d.ts"
    - test-results/
    - .git/
    - .husky/
    - .vscode/
    - .idea/

# Severity levels
severity:
  - ERROR
  - WARNING
  - INFO

# Output configuration
output:
  format: json
  destination: security/semgrep-results.json

# Custom rule configurations
rule_config:
  # Disable rules that may cause false positives in our context
  rules:
    # Allow crypto usage in our crypto service
    - id: javascript.crypto.insecure-random
      paths:
        exclude:
          - backend-app/src/services/crypto/

    # Allow eval in specific test contexts
    - id: javascript.lang.security.eval-detected
      paths:
        exclude:
          - "**/*.test.ts"
          - "**/*.spec.ts"

    # Allow console.log in development scripts
    - id: javascript.lang.best-practice.no-console-log
      paths:
        exclude:
          - scripts/
          - "**/*.dev.ts"

# Custom rules for healthcare/blockchain specific security
custom_rules:
  - id: blockchain-emr-hardcoded-secrets
    pattern: |
      $SECRET = "..."
    message: "Hardcoded secret detected. Use environment variables or secure secret management."
    languages: [typescript, javascript]
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-798: Use of Hard-coded Credentials"
      owasp: "A07:2021 – Identification and Authentication Failures"

  - id: blockchain-emr-sql-injection
    patterns:
      - pattern: |
          $QUERY = "SELECT * FROM " + $USER_INPUT
      - pattern: |
          $QUERY = `SELECT * FROM ${$USER_INPUT}`
    message: "Potential SQL injection vulnerability. Use parameterized queries."
    languages: [typescript, javascript]
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-89: SQL Injection"
      owasp: "A03:2021 – Injection"

  - id: blockchain-emr-xss-vulnerability
    patterns:
      - pattern: |
          $ELEMENT.innerHTML = $USER_INPUT
      - pattern: |
          $ELEMENT.outerHTML = $USER_INPUT
    message: "Potential XSS vulnerability. Sanitize user input before rendering."
    languages: [typescript, javascript]
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-79: Cross-site Scripting"
      owasp: "A03:2021 – Injection"

  - id: blockchain-emr-weak-crypto
    patterns:
      - pattern: |
          crypto.createHash("md5")
      - pattern: |
          crypto.createHash("sha1")
    message: "Weak cryptographic algorithm detected. Use SHA-256 or stronger."
    languages: [typescript, javascript]
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
      owasp: "A02:2021 – Cryptographic Failures"

  - id: blockchain-emr-insecure-jwt
    patterns:
      - pattern: |
          jwt.sign($PAYLOAD, $SECRET, { algorithm: "none" })
      - pattern: |
          jwt.verify($TOKEN, $SECRET, { algorithms: ["none"] })
    message: "Insecure JWT configuration. Never use 'none' algorithm."
    languages: [typescript, javascript]
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-347: Improper Verification of Cryptographic Signature"
      owasp: "A02:2021 – Cryptographic Failures"

  - id: blockchain-emr-path-traversal
    patterns:
      - pattern: |
          fs.readFile($USER_INPUT + "...")
      - pattern: |
          fs.readFile(`${$USER_INPUT}...`)
      - pattern: |
          path.join($USER_INPUT, ...)
    message: "Potential path traversal vulnerability. Validate and sanitize file paths."
    languages: [typescript, javascript]
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-22: Path Traversal"
      owasp: "A01:2021 – Broken Access Control"

  - id: blockchain-emr-command-injection
    patterns:
      - pattern: |
          exec($USER_INPUT)
      - pattern: |
          spawn($USER_INPUT, ...)
      - pattern: |
          execSync($USER_INPUT)
    message: "Potential command injection vulnerability. Validate and sanitize command inputs."
    languages: [typescript, javascript]
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-78: OS Command Injection"
      owasp: "A03:2021 – Injection"

  - id: blockchain-emr-insecure-cors
    patterns:
      - pattern: |
          cors({ origin: "*" })
      - pattern: |
          cors({ origin: true })
    message: "Insecure CORS configuration. Specify allowed origins explicitly."
    languages: [typescript, javascript]
    severity: WARNING
    metadata:
      category: security
      cwe: "CWE-346: Origin Validation Error"
      owasp: "A05:2021 – Security Misconfiguration"

  - id: blockchain-emr-missing-helmet
    patterns:
      - pattern: |
          app.use(express.json())
      - pattern-not: |
          app.use(helmet())
    message: "Missing security headers middleware. Use helmet() for security headers."
    languages: [typescript, javascript]
    severity: WARNING
    metadata:
      category: security
      cwe: "CWE-693: Protection Mechanism Failure"
      owasp: "A05:2021 – Security Misconfiguration"

# Performance settings
max_memory: 2048
timeout: 300
jobs: 4

# Metrics and reporting
metrics:
  enabled: true
  endpoint: "https://metrics.semgrep.dev"

# Integration settings
integrations:
  github:
    enabled: true
    fail_on_error: true
    comment_on_pr: true
