# Kubernetes Deployment for Fabric Certificate Authorities
# Production-grade CA deployment for all organizations

apiVersion: v1
kind: ConfigMap
metadata:
  name: ca-config
  namespace: emr-fabric-network
data:
  FABRIC_CA_HOME: "/etc/hyperledger/fabric-ca-server"
  FABRIC_CA_SERVER_TLS_ENABLED: "true"
  FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS: "0.0.0.0:17054"
---
apiVersion: v1
kind: Service
metadata:
  name: ca-hospital1-service
  namespace: emr-fabric-network
  labels:
    app: ca-hospital1
    component: fabric-ca
    org: hospital1
spec:
  type: ClusterIP
  ports:
  - name: ca
    port: 7054
    targetPort: 7054
    protocol: TCP
  - name: operations
    port: 17054
    targetPort: 17054
    protocol: TCP
  selector:
    app: ca-hospital1
---
apiVersion: v1
kind: Service
metadata:
  name: ca-hospital2-service
  namespace: emr-fabric-network
  labels:
    app: ca-hospital2
    component: fabric-ca
    org: hospital2
spec:
  type: ClusterIP
  ports:
  - name: ca
    port: 8054
    targetPort: 8054
    protocol: TCP
  - name: operations
    port: 18054
    targetPort: 18054
    protocol: TCP
  selector:
    app: ca-hospital2
---
apiVersion: v1
kind: Service
metadata:
  name: ca-regulator-service
  namespace: emr-fabric-network
  labels:
    app: ca-regulator
    component: fabric-ca
    org: regulator
spec:
  type: ClusterIP
  ports:
  - name: ca
    port: 9054
    targetPort: 9054
    protocol: TCP
  - name: operations
    port: 19054
    targetPort: 19054
    protocol: TCP
  selector:
    app: ca-regulator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-hospital1-deployment
  namespace: emr-fabric-network
  labels:
    app: ca-hospital1
    component: fabric-ca
    org: hospital1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ca-hospital1
  template:
    metadata:
      labels:
        app: ca-hospital1
        component: fabric-ca
        org: hospital1
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: ca
        image: hyperledger/fabric-ca:1.5
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "fabric-ca-server start -b admin:adminpw -d"]
        envFrom:
        - configMapRef:
            name: ca-config
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "ca-hospital1"
        - name: FABRIC_CA_SERVER_PORT
          value: "7054"
        ports:
        - containerPort: 7054
          name: ca
        - containerPort: 17054
          name: operations
        volumeMounts:
        - name: ca-data
          mountPath: /etc/hyperledger/fabric-ca-server
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /cainfo
            port: 7054
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /cainfo
            port: 7054
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: ca-data
        secret:
          secretName: ca-hospital1-secret
      nodeSelector:
        node-type: fabric-ca
        org: hospital1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-hospital2-deployment
  namespace: emr-fabric-network
  labels:
    app: ca-hospital2
    component: fabric-ca
    org: hospital2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ca-hospital2
  template:
    metadata:
      labels:
        app: ca-hospital2
        component: fabric-ca
        org: hospital2
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: ca
        image: hyperledger/fabric-ca:1.5
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "fabric-ca-server start -b admin:adminpw -d"]
        envFrom:
        - configMapRef:
            name: ca-config
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "ca-hospital2"
        - name: FABRIC_CA_SERVER_PORT
          value: "8054"
        ports:
        - containerPort: 8054
          name: ca
        - containerPort: 18054
          name: operations
        volumeMounts:
        - name: ca-data
          mountPath: /etc/hyperledger/fabric-ca-server
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /cainfo
            port: 8054
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /cainfo
            port: 8054
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: ca-data
        secret:
          secretName: ca-hospital2-secret
      nodeSelector:
        node-type: fabric-ca
        org: hospital2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-regulator-deployment
  namespace: emr-fabric-network
  labels:
    app: ca-regulator
    component: fabric-ca
    org: regulator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ca-regulator
  template:
    metadata:
      labels:
        app: ca-regulator
        component: fabric-ca
        org: regulator
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: ca
        image: hyperledger/fabric-ca:1.5
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "fabric-ca-server start -b admin:adminpw -d"]
        envFrom:
        - configMapRef:
            name: ca-config
        env:
        - name: FABRIC_CA_SERVER_CA_NAME
          value: "ca-regulator"
        - name: FABRIC_CA_SERVER_PORT
          value: "9054"
        ports:
        - containerPort: 9054
          name: ca
        - containerPort: 19054
          name: operations
        volumeMounts:
        - name: ca-data
          mountPath: /etc/hyperledger/fabric-ca-server
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /cainfo
            port: 9054
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /cainfo
            port: 9054
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: ca-data
        secret:
          secretName: ca-regulator-secret
      nodeSelector:
        node-type: fabric-ca
        org: regulator
