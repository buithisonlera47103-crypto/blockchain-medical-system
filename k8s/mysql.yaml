apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: blockchain-emr
  labels:
    app: mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: blockchain-emr
  labels:
    app: mysql
spec:
  serviceName: mysql-service
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: blockchain-emr-secrets
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: blockchain-emr-config
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: blockchain-emr-secrets
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: blockchain-emr-secrets
              key: MYSQL_PASSWORD
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
        - name: mysql-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: mysql-config
        configMap:
          name: mysql-config
      - name: mysql-init
        configMap:
          name: mysql-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: blockchain-emr
  labels:
    app: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
    name: mysql
  selector:
    app: mysql
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: blockchain-emr
  labels:
    app: mysql
data:
  my.cnf: |
    [mysqld]
    # Performance settings
    innodb_buffer_pool_size = 2G
    innodb_log_file_size = 256M
    innodb_flush_log_at_trx_commit = 1
    innodb_flush_method = O_DIRECT
    
    # Connection settings
    max_connections = 200
    max_connect_errors = 1000000
    
    # Query cache
    query_cache_type = 1
    query_cache_size = 256M
    
    # Binary logging for replication
    log-bin = mysql-bin
    server-id = 1
    binlog_format = ROW
    
    # Security settings
    local_infile = 0
    skip_show_database
    
    # Character set
    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci
    
    # Timezone
    default-time-zone = '+00:00'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-scripts
  namespace: blockchain-emr
  labels:
    app: mysql
data:
  01-init.sql: |
    -- Create additional databases if needed
    CREATE DATABASE IF NOT EXISTS blockchain_emr_test;
    
    -- Create monitoring user
    CREATE USER IF NOT EXISTS 'monitor'@'%' IDENTIFIED BY 'monitor_password';
    GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'monitor'@'%';
    
    -- Create backup user
    CREATE USER IF NOT EXISTS 'backup'@'%' IDENTIFIED BY 'backup_password';
    GRANT SELECT, LOCK TABLES, SHOW VIEW, EVENT, TRIGGER ON *.* TO 'backup'@'%';
    
    FLUSH PRIVILEGES;
