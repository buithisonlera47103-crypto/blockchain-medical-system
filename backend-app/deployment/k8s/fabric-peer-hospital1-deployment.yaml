# Kubernetes Deployment for Hospital1 Fabric Peers
# Production-grade peer deployment with persistence and monitoring

apiVersion: v1
kind: ConfigMap
metadata:
  name: peer-hospital1-config
  namespace: emr-fabric-network
data:
  CORE_VM_ENDPOINT: "unix:///host/var/run/docker.sock"
  FABRIC_LOGGING_SPEC: "INFO"
  CORE_PEER_TLS_ENABLED: "true"
  CORE_PEER_PROFILE_ENABLED: "true"
  CORE_PEER_LOCALMSPID: "Hospital1MSP"
  CORE_OPERATIONS_LISTENADDRESS: "0.0.0.0:17051"
  CORE_METRICS_PROVIDER: "prometheus"
  CORE_CHAINCODE_EXECUTETIMEOUT: "300s"
---
apiVersion: v1
kind: Service
metadata:
  name: peer0-hospital1-service
  namespace: emr-fabric-network
  labels:
    app: peer0-hospital1
    component: fabric-peer
    org: hospital1
spec:
  type: ClusterIP
  ports:
  - name: peer
    port: 7051
    targetPort: 7051
    protocol: TCP
  - name: chaincode
    port: 7052
    targetPort: 7052
    protocol: TCP
  - name: operations
    port: 17051
    targetPort: 17051
    protocol: TCP
  selector:
    app: peer0-hospital1
---
apiVersion: v1
kind: Service
metadata:
  name: peer1-hospital1-service
  namespace: emr-fabric-network
  labels:
    app: peer1-hospital1
    component: fabric-peer
    org: hospital1
spec:
  type: ClusterIP
  ports:
  - name: peer
    port: 8051
    targetPort: 8051
    protocol: TCP
  - name: chaincode
    port: 8052
    targetPort: 8052
    protocol: TCP
  - name: operations
    port: 18051
    targetPort: 18051
    protocol: TCP
  selector:
    app: peer1-hospital1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: peer0-hospital1-pvc
  namespace: emr-fabric-network
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: peer1-hospital1-pvc
  namespace: emr-fabric-network
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peer0-hospital1-deployment
  namespace: emr-fabric-network
  labels:
    app: peer0-hospital1
    component: fabric-peer
    org: hospital1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peer0-hospital1
  template:
    metadata:
      labels:
        app: peer0-hospital1
        component: fabric-peer
        org: hospital1
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: peer
        image: hyperledger/fabric-peer:2.5
        imagePullPolicy: IfNotPresent
        command: ["peer", "node", "start"]
        envFrom:
        - configMapRef:
            name: peer-hospital1-config
        env:
        - name: CORE_PEER_ID
          value: "peer0.hospital1.emr.com"
        - name: CORE_PEER_ADDRESS
          value: "peer0.hospital1.emr.com:7051"
        - name: CORE_PEER_LISTENADDRESS
          value: "0.0.0.0:7051"
        - name: CORE_PEER_CHAINCODEADDRESS
          value: "peer0.hospital1.emr.com:7052"
        - name: CORE_PEER_CHAINCODELISTENADDRESS
          value: "0.0.0.0:7052"
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: "peer1.hospital1.emr.com:8051"
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: "peer0.hospital1.emr.com:7051"
        ports:
        - containerPort: 7051
          name: peer
        - containerPort: 7052
          name: chaincode
        - containerPort: 17051
          name: operations
        volumeMounts:
        - name: peer-data
          mountPath: /var/hyperledger/production
        - name: peer-msp
          mountPath: /etc/hyperledger/fabric/msp
          readOnly: true
        - name: peer-tls
          mountPath: /etc/hyperledger/fabric/tls
          readOnly: true
        - name: docker-socket
          mountPath: /host/var/run/docker.sock
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 17051
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 17051
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: peer-data
        persistentVolumeClaim:
          claimName: peer0-hospital1-pvc
      - name: peer-msp
        secret:
          secretName: peer0-hospital1-msp-secret
      - name: peer-tls
        secret:
          secretName: peer0-hospital1-tls-secret
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      nodeSelector:
        node-type: fabric-peer
        org: hospital1
      tolerations:
      - key: "fabric-peer"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: peer1-hospital1-deployment
  namespace: emr-fabric-network
  labels:
    app: peer1-hospital1
    component: fabric-peer
    org: hospital1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peer1-hospital1
  template:
    metadata:
      labels:
        app: peer1-hospital1
        component: fabric-peer
        org: hospital1
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: peer
        image: hyperledger/fabric-peer:2.5
        imagePullPolicy: IfNotPresent
        command: ["peer", "node", "start"]
        envFrom:
        - configMapRef:
            name: peer-hospital1-config
        env:
        - name: CORE_PEER_ID
          value: "peer1.hospital1.emr.com"
        - name: CORE_PEER_ADDRESS
          value: "peer1.hospital1.emr.com:8051"
        - name: CORE_PEER_LISTENADDRESS
          value: "0.0.0.0:8051"
        - name: CORE_PEER_CHAINCODEADDRESS
          value: "peer1.hospital1.emr.com:8052"
        - name: CORE_PEER_CHAINCODELISTENADDRESS
          value: "0.0.0.0:8052"
        - name: CORE_PEER_GOSSIP_BOOTSTRAP
          value: "peer0.hospital1.emr.com:7051"
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: "peer1.hospital1.emr.com:8051"
        - name: CORE_OPERATIONS_LISTENADDRESS
          value: "0.0.0.0:18051"
        ports:
        - containerPort: 8051
          name: peer
        - containerPort: 8052
          name: chaincode
        - containerPort: 18051
          name: operations
        volumeMounts:
        - name: peer-data
          mountPath: /var/hyperledger/production
        - name: peer-msp
          mountPath: /etc/hyperledger/fabric/msp
          readOnly: true
        - name: peer-tls
          mountPath: /etc/hyperledger/fabric/tls
          readOnly: true
        - name: docker-socket
          mountPath: /host/var/run/docker.sock
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 18051
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 18051
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: peer-data
        persistentVolumeClaim:
          claimName: peer1-hospital1-pvc
      - name: peer-msp
        secret:
          secretName: peer1-hospital1-msp-secret
      - name: peer-tls
        secret:
          secretName: peer1-hospital1-tls-secret
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      nodeSelector:
        node-type: fabric-peer
        org: hospital1
      tolerations:
      - key: "fabric-peer"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
